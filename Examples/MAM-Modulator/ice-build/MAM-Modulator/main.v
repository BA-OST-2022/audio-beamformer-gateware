// Code generated by Icestudio 0.9.0

`default_nettype none

//---- Top entity
module main #(
 parameter v03c634 = 0,
 parameter v3d07ba = 0,
 parameter v1bb386 = 0,
 parameter v231522 = 255,
 parameter v7cb1a2 = 20,
 parameter v220abd = "sine.list",
 parameter v9fe595 = 16383,
 parameter v5bd227 = 125,
 parameter vc95208 = 5,
 parameter v5baa6d = 32767,
 parameter v2a0a3f = 15,
 parameter v174b86 = 4095,
 parameter v03e90a = -4095,
 parameter va7c73b = 10
) (
 input v368dc3,
 input ve71a3c,
 input va20dc5,
 input v764ae6,
 input v629abd,
 input va83638,
 input vclk,
 output ve863c9,
 output v0c4498,
 output v4b62fd,
 output v74ab9d,
 output vb7ae1c,
 output vb96364,
 output ve6e8ca,
 output vd93e69,
 output v69e493,
 output v4cfd20,
 output vb469f3
);
 localparam p0 = v7cb1a2;
 localparam p2 = v3d07ba;
 localparam p3 = v03c634;
 localparam p4 = v1bb386;
 localparam p5 = v2a0a3f;
 localparam p12 = v174b86;
 localparam p26 = v5baa6d;
 localparam p30 = v220abd;
 localparam p31 = v9fe595;
 localparam p37 = va7c73b;
 localparam p47 = v5bd227;
 localparam p61 = v231522;
 localparam p75 = vc95208;
 localparam p100 = v03e90a;
 wire w1;
 wire [0:15] w6;
 wire [0:15] w7;
 wire [0:15] w8;
 wire w9;
 wire [0:15] w10;
 wire w11;
 wire [0:15] w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire [0:31] w27;
 wire [0:7] w28;
 wire [0:7] w29;
 wire [0:15] w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 wire [0:15] w38;
 wire [0:15] w39;
 wire [0:15] w40;
 wire w41;
 wire w42;
 wire w43;
 wire [0:15] w44;
 wire w45;
 wire w46;
 wire w48;
 wire w49;
 wire w50;
 wire w51;
 wire [0:15] w52;
 wire [0:15] w53;
 wire [0:15] w54;
 wire [0:15] w55;
 wire [0:15] w56;
 wire w57;
 wire [0:2] w58;
 wire [0:7] w59;
 wire [0:15] w60;
 wire [0:15] w62;
 wire [0:15] w63;
 wire w64;
 wire w65;
 wire w66;
 wire [0:15] w67;
 wire [0:15] w68;
 wire [0:15] w69;
 wire [0:15] w70;
 wire w71;
 wire w72;
 wire w73;
 wire w74;
 wire w76;
 wire w77;
 wire w78;
 wire w79;
 wire w80;
 wire w81;
 wire w82;
 wire w83;
 wire w84;
 wire w85;
 wire w86;
 wire w87;
 wire w88;
 wire w89;
 wire w90;
 wire w91;
 wire w92;
 wire w93;
 wire w94;
 wire w95;
 wire w96;
 wire w97;
 wire [0:7] w98;
 wire [0:15] w99;
 wire [0:15] w101;
 wire [0:15] w102;
 wire [0:15] w103;
 wire [0:15] w104;
 wire w105;
 assign v74ab9d = w14;
 assign vb7ae1c = w15;
 assign vb96364 = w16;
 assign ve6e8ca = w17;
 assign vd93e69 = w18;
 assign v69e493 = w19;
 assign v4cfd20 = w20;
 assign w21 = v368dc3;
 assign vb469f3 = w22;
 assign w23 = ve71a3c;
 assign w24 = va20dc5;
 assign v0c4498 = w33;
 assign v4b62fd = w34;
 assign w51 = ve71a3c;
 assign w79 = v764ae6;
 assign w80 = v629abd;
 assign w81 = va83638;
 assign w105 = vclk;
 assign w10 = w6;
 assign w35 = w1;
 assign w36 = w11;
 assign w46 = w45;
 assign w48 = w45;
 assign w48 = w46;
 assign w49 = w1;
 assign w49 = w35;
 assign w50 = w45;
 assign w50 = w46;
 assign w50 = w48;
 assign w51 = w23;
 assign w52 = w44;
 assign w53 = w39;
 assign w54 = w40;
 assign w67 = w55;
 assign w68 = w62;
 assign w69 = w63;
 assign w73 = w72;
 assign w74 = w72;
 assign w74 = w73;
 assign w76 = w1;
 assign w76 = w35;
 assign w76 = w49;
 assign w78 = w77;
 assign w83 = w82;
 assign w84 = w82;
 assign w84 = w83;
 assign w85 = w77;
 assign w85 = w78;
 assign w86 = w77;
 assign w86 = w78;
 assign w86 = w85;
 assign w87 = w77;
 assign w87 = w78;
 assign w87 = w85;
 assign w87 = w86;
 assign w88 = w77;
 assign w88 = w78;
 assign w88 = w85;
 assign w88 = w86;
 assign w88 = w87;
 assign w95 = w77;
 assign w95 = w78;
 assign w95 = w85;
 assign w95 = w86;
 assign w95 = w87;
 assign w95 = w88;
 assign w96 = w77;
 assign w96 = w78;
 assign w96 = w85;
 assign w96 = w86;
 assign w96 = w87;
 assign w96 = w88;
 assign w96 = w95;
 assign w97 = w77;
 assign w97 = w78;
 assign w97 = w85;
 assign w97 = w86;
 assign w97 = w87;
 assign w97 = w88;
 assign w97 = w95;
 assign w97 = w96;
 assign w98 = w59;
 assign w101 = w44;
 assign w101 = w52;
 assign w102 = w99;
 main_v6e4b35 #(
  .N(p0)
 ) v6e4b35 (
  .clk_in(w1),
  .clk_out(w45)
 );
 ve2b7eb #(
  .vecb3d5(p2),
  .ve58c06(p3),
  .v204bed(p4)
 ) ve3c290 (
  .v3ead5b(w1),
  .v328508(w105)
 );
 v2dfa72 v3b78d3 (
  .vdb3006(w6),
  .v2ba137(w7),
  .v356dbf(w101)
 );
 v625333 #(
  .vaf1d6e(p5)
 ) vcc6fa1 (
  .vb6a5b5(w6),
  .v7ff276(w9)
 );
 v2dfa72 v698310 (
  .vdb3006(w8),
  .v2ba137(w10),
  .v356dbf(w13)
 );
 v6bd4c0 ve5834d (
  .v3f90b8(w7),
  .vc320da(w8),
  .v6dda25(w45)
 );
 v96f098 vac33ad (
  .v0e28cb(w9),
  .vcbab45(w11)
 );
 v1f5ce5 v7981d5 (
  .v2d3366(w11),
  .ve0f053(w13),
  .v17f43d(w102),
  .v0792df(w103)
 );
 v34688e #(
  .vc5c8ea(p12)
 ) v601465 (
  .v366f99(w99)
 );
 vbc6704 vce5153 (
  .vc85478(w14),
  .v7ada3f(w15),
  .v2c9812(w16),
  .ve0c1b4(w17),
  .v7c37b3(w18),
  .v8f149e(w19),
  .vb85197(w20),
  .v45ab8c(w22),
  .v595263(w59)
 );
 v8e5461 v60d7e1 (
  .v261cbf(w21),
  .vff4755(w23),
  .v563b03(w24),
  .v90f223(w44)
 );
 v8dd0ad v590a69 (
  .v59ca29(w25),
  .ve13d67(w28),
  .v7c48af(w71),
  .vd2b237(w72),
  .vcb13fe(w82)
 );
 v6a1dec v5e4ae0 (
  .va66a4c(w27),
  .vb58dd5(w49),
  .v6ef738(w50),
  .v7a25d5(w104)
 );
 v8dd0ad vd002a8 (
  .v7c48af(w25),
  .ve13d67(w29),
  .v59ca29(w57),
  .vd2b237(w73),
  .vcb13fe(w83)
 );
 v34688e #(
  .vc5c8ea(p26)
 ) v7d310e (
  .v366f99(w104)
 );
 vf1c811 v41a1a8 (
  .v2ebc76(w27)
 );
 v1e224f v3c8772 (
  .v385b9c(w28),
  .vd34531(w29)
 );
 v34688e #(
  .vc5c8ea(p31)
 ) vf25da6 (
  .v366f99(w32)
 );
 v2dfa72 v24e66e (
  .v356dbf(w32),
  .v2ba137(w60)
 );
 v6bd4c0 va10b8b (
  .vc320da(w38),
  .v6dda25(w46)
 );
 main_v8bf73c #(
  .DEADTIME(p37)
 ) v8bf73c (
  .out(w33),
  .out_inv(w34),
  .clk(w35),
  .in(w36)
 );
 main_v37240a v37240a (
  .out(w38)
 );
 main_v27ccf5 v27ccf5 (
  .out(w60)
 );
 v3990b8 va14b8d (
  .v5b7252(w39),
  .v9c2c2b(w41),
  .v9e1443(w44)
 );
 v3990b8 v83c153 (
  .v9e1443(w39),
  .v5b7252(w40),
  .v9c2c2b(w42)
 );
 v3990b8 v0c5462 (
  .v9e1443(w40),
  .v9c2c2b(w43),
  .v5b7252(w55)
 );
 main_vecc105 vecc105 (
  .d5(w41),
  .d4(w42),
  .d3(w43),
  .clk_in(w51),
  .d2(w64),
  .d1(w65),
  .d0(w66)
 );
 main_vdb28b3 #(
  .ROMFILE(p30),
  .COUNT(p47)
 ) vdb28b3 (
  .clk_in(w48)
 );
 v26f57a v49b0e7 (
 
 );
 v3571f5 v4c8976 (
  .v356dbf(w99)
 );
 v7f1709 v11a955 (
  .vbf6cae(w56)
 );
 vabdec4 vb8b7c1 (
  .vd8a876(w52),
  .v5a666c(w53),
  .v280e01(w54),
  .v727789(w55),
  .vc6bfd8(w56),
  .v6e806a(w58),
  .v777340(w68),
  .v6b653c(w69),
  .v3bb07d(w70)
 );
 v8dd0ad v4d6a3f (
  .v7c48af(w57),
  .ve13d67(w59),
  .vd2b237(w74),
  .vcb13fe(w84)
 );
 v481a07 v976b51 (
  .v738343(w58),
  .v595263(w98)
 );
 v5ad97e #(
  .vc5c8ea(p61)
 ) vc9c7d3 (
 
 );
 v3990b8 v79a44b (
  .v5b7252(w62),
  .v9c2c2b(w64),
  .v9e1443(w67)
 );
 v3990b8 v1d0301 (
  .v9e1443(w62),
  .v5b7252(w63),
  .v9c2c2b(w65)
 );
 v3990b8 vd8ac09 (
  .v9e1443(w63),
  .v9c2c2b(w66),
  .v5b7252(w70)
 );
 v70ff7f vd04c86 (
  .vc24d9f(w71),
  .vb55943(w77),
  .vef4cea(w92)
 );
 v70ff7f v0be2f2 (
  .vc24d9f(w72),
  .vb55943(w78),
  .vef4cea(w93)
 );
 main_vfc6dff #(
  .N(p75)
 ) vfc6dff (
  .clk_in(w76),
  .clk_out(w77)
 );
 v70ff7f v5a357e (
  .vef4cea(w79),
  .vb55943(w86),
  .vc24d9f(w89)
 );
 v70ff7f v964c1a (
  .vc24d9f(w82),
  .vb55943(w85),
  .vef4cea(w94)
 );
 v70ff7f vaca464 (
  .vef4cea(w80),
  .vb55943(w87),
  .vc24d9f(w90)
 );
 v70ff7f vd45c8f (
  .vef4cea(w81),
  .vb55943(w88),
  .vc24d9f(w91)
 );
 v70ff7f v8909a2 (
  .vef4cea(w89),
  .vc24d9f(w92),
  .vb55943(w95)
 );
 v70ff7f v0100c3 (
  .vef4cea(w90),
  .vc24d9f(w93),
  .vb55943(w96)
 );
 v70ff7f v21b7ce (
  .vef4cea(w91),
  .vc24d9f(w94),
  .vb55943(w97)
 );
 v34688e #(
  .vc5c8ea(p100)
 ) v0101b3 (
  .v366f99(w103)
 );
endmodule

//---- Top entity
module ve2b7eb #(
 parameter ve58c06 = 0,
 parameter vecb3d5 = 79,
 parameter v204bed = 4,
 parameter vd29ea2 = 1,
 parameter v16d365 = "SIMPLE"
) (
 input v328508,
 output vdbfa46,
 output v3ead5b,
 output v333bf4
);
 localparam p0 = ve58c06;
 localparam p1 = vecb3d5;
 localparam p2 = v204bed;
 localparam p3 = vd29ea2;
 localparam p4 = v16d365;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 assign vdbfa46 = w7;
 assign v3ead5b = w8;
 assign v333bf4 = w9;
 assign w10 = v328508;
 vc83dcd va0dc84 (
  .v608bd9(w5)
 );
 vc4dd08 vda5929 (
  .v608bd9(w6)
 );
 ve2b7eb_vd4bd9d #(
  .DIVR(p0),
  .DIVF(p1),
  .DIVQ(p2),
  .FILTER_RANGE(p3),
  .FEEDBACK_PATH(p4)
 ) vd4bd9d (
  .RESETB(w5),
  .BYPASS(w6),
  .PLLOUTGLOBAL(w7),
  .PLLOUTCORE(w8),
  .LOCK(w9),
  .PACKAGEPIN(w10)
 );
endmodule

//---------------------------------------------------
//-- PLL40_PAD
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- SB_PLL40_PAD
//---------------------------------------------------

module ve2b7eb_vd4bd9d #(
 parameter DIVR = 0,
 parameter DIVF = 0,
 parameter DIVQ = 0,
 parameter FILTER_RANGE = 0,
 parameter FEEDBACK_PATH = 0
) (
 input PACKAGEPIN,
 input RESETB,
 input BYPASS,
 output PLLOUTGLOBAL,
 output PLLOUTCORE,
 output LOCK
);
 SB_PLL40_PAD #(
 		.FEEDBACK_PATH("SIMPLE"),
 		.DIVR(DIVR),		// DIVR =  0
 		.DIVF(DIVF),	// DIVF = 79
 		.DIVQ(DIVQ),		// DIVQ =  4
 		.FILTER_RANGE(FILTER_RANGE)	// FILTER_RANGE = 1
 	) uut (
 		.LOCK(LOCK),
 		.RESETB(RESETB),
 		.BYPASS(BYPASS),
 		.PACKAGEPIN(PACKAGEPIN),
 		.PLLOUTCORE(PLLOUTCORE),
 		.PLLOUTGLOBAL(PLLOUTGLOBAL)
 		);
endmodule
//---- Top entity
module vc83dcd (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc83dcd_v68c173 v68c173 (
  .v(w0)
 );
endmodule

//---------------------------------------------------
//-- Bit 1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Assign 1 to the output wire
//---------------------------------------------------

module vc83dcd_v68c173 (
 output v
);
 // Bit 1
 
 assign v = 1'b1;
endmodule
//---- Top entity
module vc4dd08 (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc4dd08_v68c173 v68c173 (
  .v(w0)
 );
endmodule

//---------------------------------------------------
//-- Bit 0
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Assign 0 to the output wire
//---------------------------------------------------

module vc4dd08_v68c173 (
 output v
);
 // Bit 0
 
 assign v = 1'b0;
endmodule
//---- Top entity
module v2dfa72 #(
 parameter v52d4a9 = 16
) (
 input [15:0] v356dbf,
 input [15:0] v2ba137,
 output [15:0] vdb3006,
 output vfeefc7,
 output v0f5b9c
);
 localparam p5 = v52d4a9;
 wire [0:15] w0;
 wire [0:15] w1;
 wire w2;
 wire w3;
 wire [0:15] w4;
 assign w0 = v356dbf;
 assign w1 = v2ba137;
 assign vfeefc7 = w2;
 assign v0f5b9c = w3;
 assign vdb3006 = w4;
 v2dfa72_ve6b254 #(
  .N(p5)
 ) ve6b254 (
  .a(w0),
  .b(w1),
  .clipMaxInt(w2),
  .clipMinInt(w3),
  .y(w4)
 );
endmodule

//---------------------------------------------------
//-- add_int16_sat
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 16 bits signed integer add with minint,maxint saturation
//---------------------------------------------------

module v2dfa72_ve6b254 #(
 parameter N = 0
) (
 input [15:0] a,
 input [15:0] b,
 output [15:0] y,
 output clipMaxInt,
 output clipMinInt
);
 // y = a + b;  signed N bits integers, coerce sum y in [-32768..32767 range]
 
 localparam N_M1 = N - 1;
   
 wire signed [N:0] Sum_N_P1_bits;
 wire y_less_than_MININT;
 wire y_more_than_MAXINT;
 
 wire signed [N_M1:0] MININT = {1'b1,{N_M1{1'b0}}};
 wire signed [N_M1:0] MAXINT = {1'b0,{N_M1{1'b1}}};
 
 assign Sum_N_P1_bits = $signed(a) + $signed(b);
 assign y_less_than_MININT = Sum_N_P1_bits[N:N_M1] == 2'b10;
 assign y_more_than_MAXINT = Sum_N_P1_bits[N:N_M1] == 2'b01;
 
 assign y = y_less_than_MININT ? MININT : y_more_than_MAXINT ? MAXINT : Sum_N_P1_bits[N_M1:0];
 
endmodule
//---- Top entity
module v625333 #(
 parameter vaf1d6e = 0
) (
 input [15:0] vb6a5b5,
 output v7ff276
);
 localparam p0 = vaf1d6e;
 wire w1;
 wire [0:15] w2;
 assign v7ff276 = w1;
 assign w2 = vb6a5b5;
 v625333_vd80544 #(
  .BIT(p0)
 ) vd80544 (
  .o(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Extract-1-bit-16bit-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Extractor de 1 bit de un bus de 16 bits
//---------------------------------------------------

module v625333_vd80544 #(
 parameter BIT = 0
) (
 input [15:0] i,
 output o
);
 assign o = i[BIT];
endmodule
//---- Top entity
module v6bd4c0 (
 input v6dda25,
 input [15:0] vc320da,
 output [15:0] v3f90b8
);
 wire [0:15] w0;
 wire [0:15] w1;
 wire [0:3] w2;
 wire [0:3] w3;
 wire [0:3] w4;
 wire [0:3] w5;
 wire [0:3] w6;
 wire [0:3] w7;
 wire [0:3] w8;
 wire [0:3] w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 assign w0 = vc320da;
 assign v3f90b8 = w1;
 assign w10 = v6dda25;
 assign w11 = v6dda25;
 assign w12 = v6dda25;
 assign w13 = v6dda25;
 assign w11 = w10;
 assign w12 = w10;
 assign w12 = w11;
 assign w13 = w10;
 assign w13 = w11;
 assign w13 = w12;
 v852bc8 vd47660 (
  .v91b9c1(w0),
  .v527ffb(w2),
  .v71a717(w3),
  .v0b337e(w4),
  .vfc89f9(w5)
 );
 v401a28 v3ef916 (
  .v14a530(w1),
  .vcc76e8(w6),
  .vd531e6(w7),
  .v7ef7d6(w8),
  .v1447f2(w9)
 );
 vc12f0f vd70fdb (
  .v7c67e1(w5),
  .vf6ad19(w9),
  .v6dda25(w10)
 );
 vc12f0f v8c7a79 (
  .v7c67e1(w4),
  .vf6ad19(w8),
  .v6dda25(w11)
 );
 vc12f0f v132776 (
  .v7c67e1(w3),
  .vf6ad19(w7),
  .v6dda25(w12)
 );
 vc12f0f v1937e6 (
  .v7c67e1(w2),
  .vf6ad19(w6),
  .v6dda25(w13)
 );
endmodule

//---------------------------------------------------
//-- DFF-x16
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- DFF-x16: 16 D flip-flops in paralell
//---------------------------------------------------
//---- Top entity
module v852bc8 (
 input [15:0] v91b9c1,
 output [3:0] vfc89f9,
 output [3:0] v0b337e,
 output [3:0] v71a717,
 output [3:0] v527ffb
);
 wire [0:15] w0;
 wire [0:3] w1;
 wire [0:3] w2;
 wire [0:3] w3;
 wire [0:3] w4;
 assign w0 = v91b9c1;
 assign v527ffb = w1;
 assign v71a717 = w2;
 assign v0b337e = w3;
 assign vfc89f9 = w4;
 v852bc8_v9a2a06 v9a2a06 (
  .i(w0),
  .o0(w1),
  .o1(w2),
  .o2(w3),
  .o3(w4)
 );
endmodule

//---------------------------------------------------
//-- Bus16-Split-quarter
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus16-Split-quarter: Split the 16-bits bus into four buses of the same size
//---------------------------------------------------

module v852bc8_v9a2a06 (
 input [15:0] i,
 output [3:0] o3,
 output [3:0] o2,
 output [3:0] o1,
 output [3:0] o0
);
 assign o3 = i[15:12];
 assign o2 = i[11:8];
 assign o1 = i[7:4];
 assign o0 = i[3:0];
endmodule
//---- Top entity
module v401a28 (
 input [3:0] v1447f2,
 input [3:0] v7ef7d6,
 input [3:0] vd531e6,
 input [3:0] vcc76e8,
 output [15:0] v14a530
);
 wire [0:15] w0;
 wire [0:3] w1;
 wire [0:3] w2;
 wire [0:3] w3;
 wire [0:3] w4;
 assign v14a530 = w0;
 assign w1 = vcc76e8;
 assign w2 = vd531e6;
 assign w3 = v7ef7d6;
 assign w4 = v1447f2;
 v401a28_v9a2a06 v9a2a06 (
  .o(w0),
  .i0(w1),
  .i1(w2),
  .i2(w3),
  .i3(w4)
 );
endmodule

//---------------------------------------------------
//-- Bus16-Join-quarter
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus16-Join-quarter: Join the four same buses into an 16-bits Bus
//---------------------------------------------------

module v401a28_v9a2a06 (
 input [3:0] i3,
 input [3:0] i2,
 input [3:0] i1,
 input [3:0] i0,
 output [15:0] o
);
 assign o = {i3, i2, i1, i0};
 
endmodule
//---- Top entity
module vc12f0f (
 input v6dda25,
 input [3:0] v7c67e1,
 output [3:0] vf6ad19
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:3] w6;
 wire [0:3] w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 assign w6 = v7c67e1;
 assign vf6ad19 = w7;
 assign w10 = v6dda25;
 assign w11 = v6dda25;
 assign w12 = v6dda25;
 assign w13 = v6dda25;
 assign w11 = w10;
 assign w12 = w10;
 assign w12 = w11;
 assign w13 = w10;
 assign w13 = w11;
 assign w13 = w12;
 vc4f23a v390ed9 (
  .v3f8943(w0),
  .v64d863(w1),
  .vda577d(w4),
  .v985fcb(w6),
  .v4f1fd3(w8)
 );
 v84f0a1 v0e8f25 (
  .v03aaf0(w2),
  .vee8a83(w3),
  .vf8041d(w5),
  .v11bca5(w7),
  .vd84a57(w9)
 );
 v053dc2 vb95ccb (
  .vf54559(w1),
  .ve8318d(w2),
  .va4102a(w13)
 );
 v053dc2 v736168 (
  .vf54559(w0),
  .ve8318d(w3),
  .va4102a(w12)
 );
 v053dc2 ve8ed3a (
  .vf54559(w4),
  .ve8318d(w5),
  .va4102a(w11)
 );
 v053dc2 vbdfdbf (
  .vf54559(w8),
  .ve8318d(w9),
  .va4102a(w10)
 );
endmodule

//---------------------------------------------------
//-- DFF-x04
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- DFF-04: Three D flip-flops in paralell
//---------------------------------------------------
//---- Top entity
module vc4f23a (
 input [3:0] v985fcb,
 output v4f1fd3,
 output vda577d,
 output v3f8943,
 output v64d863
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:3] w4;
 assign v3f8943 = w0;
 assign v64d863 = w1;
 assign vda577d = w2;
 assign v4f1fd3 = w3;
 assign w4 = v985fcb;
 vc4f23a_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .o2(w2),
  .o3(w3),
  .i(w4)
 );
endmodule

//---------------------------------------------------
//-- Bus4-Split-all
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus4-Split-all: Split the 4-bits bus into its wires
//---------------------------------------------------

module vc4f23a_v9a2a06 (
 input [3:0] i,
 output o3,
 output o2,
 output o1,
 output o0
);
 assign o3 = i[3];
 assign o2 = i[2];
 assign o1 = i[1];
 assign o0 = i[0];
endmodule
//---- Top entity
module v84f0a1 (
 input vd84a57,
 input vf8041d,
 input vee8a83,
 input v03aaf0,
 output [3:0] v11bca5
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:3] w4;
 assign w0 = vee8a83;
 assign w1 = v03aaf0;
 assign w2 = vf8041d;
 assign w3 = vd84a57;
 assign v11bca5 = w4;
 v84f0a1_v9a2a06 v9a2a06 (
  .i1(w0),
  .i0(w1),
  .i2(w2),
  .i3(w3),
  .o(w4)
 );
endmodule

//---------------------------------------------------
//-- Bus4-Join-all
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus4-Join-all: Join all the wires into a 4-bits Bus
//---------------------------------------------------

module v84f0a1_v9a2a06 (
 input i3,
 input i2,
 input i1,
 input i0,
 output [3:0] o
);
 assign o = {i3, i2, i1, i0};
 
endmodule
//---- Top entity
module v053dc2 #(
 parameter v71e305 = 0
) (
 input va4102a,
 input vf54559,
 output ve8318d
);
 localparam p2 = v71e305;
 wire w0;
 wire w1;
 wire w3;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w3 = vf54559;
 v053dc2_vb8adf8 #(
  .INI(p2)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w3)
 );
endmodule

//---------------------------------------------------
//-- DFF
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- D Flip-flop (verilog implementation)
//---------------------------------------------------

module v053dc2_vb8adf8 #(
 parameter INI = 0
) (
 input clk,
 input d,
 output q
);
 //-- Initial value
 reg q = INI;
 
 //-- Capture the input data  
 //-- on the rising edge of  
 //-- the system clock
 always @(posedge clk)
   q <= d;
endmodule
//---- Top entity
module v96f098 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v96f098_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NOT logic gate
//---------------------------------------------------

module v96f098_vd54ca1 (
 input a,
 output c
);
 // NOT logic gate
 
 assign c = ~ a;
endmodule
//---- Top entity
module v1f5ce5 (
 input [15:0] v0792df,
 input [15:0] v17f43d,
 input v2d3366,
 output [15:0] ve0f053
);
 wire [0:7] w0;
 wire [0:15] w1;
 wire [0:15] w2;
 wire [0:7] w3;
 wire [0:15] w4;
 wire [0:7] w5;
 wire [0:7] w6;
 wire [0:7] w7;
 wire w8;
 wire w9;
 wire [0:7] w10;
 assign w1 = v17f43d;
 assign w2 = v0792df;
 assign ve0f053 = w4;
 assign w8 = v2d3366;
 assign w9 = v2d3366;
 assign w9 = w8;
 v1bbb5b v41cfb0 (
  .v9d2a6a(w0),
  .v2a1cbe(w7),
  .v2d3366(w9),
  .v9d7ae8(w10)
 );
 v306ca3 ve04806 (
  .v91b9c1(w1),
  .vef5eee(w6),
  .vd3ef3b(w10)
 );
 v306ca3 v4549dd (
  .v91b9c1(w2),
  .vef5eee(w5),
  .vd3ef3b(w7)
 );
 v1bbb5b vf7893e (
  .v9d2a6a(w3),
  .v2a1cbe(w5),
  .v9d7ae8(w6),
  .v2d3366(w8)
 );
 v8cc49c v5ec84b (
  .v2b8a97(w0),
  .vb334ae(w3),
  .v14a530(w4)
 );
endmodule

//---------------------------------------------------
//-- 16-bits-Mux-2-1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-to-1 Multplexer (16-bit channels)
//---------------------------------------------------
//---- Top entity
module v1bbb5b (
 input [7:0] v2a1cbe,
 input [7:0] v9d7ae8,
 input v2d3366,
 output [7:0] v9d2a6a
);
 wire [0:3] w0;
 wire [0:7] w1;
 wire [0:7] w2;
 wire [0:7] w3;
 wire [0:3] w4;
 wire [0:3] w5;
 wire [0:3] w6;
 wire [0:3] w7;
 wire w8;
 wire w9;
 wire [0:3] w10;
 assign v9d2a6a = w1;
 assign w2 = v2a1cbe;
 assign w3 = v9d7ae8;
 assign w8 = v2d3366;
 assign w9 = v2d3366;
 assign w9 = w8;
 v952eda v54aed2 (
  .v6833fd(w0),
  .v54ac99(w7),
  .v2d3366(w9),
  .ve2616d(w10)
 );
 vafb28f v117a88 (
  .v3c88fc(w0),
  .va9ac17(w1),
  .v515fe7(w4)
 );
 v6bdcd9 v9f32ae (
  .vcc8c7c(w2),
  .v651522(w5),
  .v2cc41f(w7)
 );
 v6bdcd9 v9881c7 (
  .vcc8c7c(w3),
  .v651522(w6),
  .v2cc41f(w10)
 );
 v952eda v34a43a (
  .v6833fd(w4),
  .v54ac99(w5),
  .ve2616d(w6),
  .v2d3366(w8)
 );
endmodule

//---------------------------------------------------
//-- 8-bits-Mux-2-1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-to-1 Multplexer (8-bit channels)
//---------------------------------------------------
//---- Top entity
module v952eda (
 input [3:0] v54ac99,
 input [3:0] ve2616d,
 input v2d3366,
 output [3:0] v6833fd
);
 wire w0;
 wire w1;
 wire w2;
 wire [0:3] w3;
 wire w4;
 wire [0:3] w5;
 wire [0:3] w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 assign v6833fd = w3;
 assign w5 = ve2616d;
 assign w6 = v54ac99;
 assign w9 = v2d3366;
 assign w10 = v2d3366;
 assign w11 = v2d3366;
 assign w12 = v2d3366;
 assign w10 = w9;
 assign w11 = w9;
 assign w11 = w10;
 assign w12 = w9;
 assign w12 = w10;
 assign w12 = w11;
 vd0c4e5 v6d94c9 (
  .v030ad0(w0),
  .v2d3366(w11),
  .v27dec4(w15),
  .vb192d0(w17)
 );
 vd0c4e5 vebe465 (
  .v030ad0(w1),
  .v2d3366(w12),
  .v27dec4(w16),
  .vb192d0(w18)
 );
 vd0c4e5 ve1c21f (
  .v030ad0(w2),
  .v2d3366(w10),
  .v27dec4(w13),
  .vb192d0(w14)
 );
 v84f0a1 va44bdf (
  .vee8a83(w0),
  .v03aaf0(w1),
  .vf8041d(w2),
  .v11bca5(w3),
  .vd84a57(w4)
 );
 vd0c4e5 v2ebff3 (
  .v030ad0(w4),
  .v27dec4(w7),
  .vb192d0(w8),
  .v2d3366(w9)
 );
 vc4f23a v3c3a57 (
  .v985fcb(w5),
  .v4f1fd3(w8),
  .vda577d(w14),
  .v3f8943(w17),
  .v64d863(w18)
 );
 vc4f23a vd6d480 (
  .v985fcb(w6),
  .v4f1fd3(w7),
  .vda577d(w13),
  .v3f8943(w15),
  .v64d863(w16)
 );
endmodule

//---------------------------------------------------
//-- 4-bits-Mux-2-1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-to-1 Multplexer (4-bit channels)
//---------------------------------------------------
//---- Top entity
module vd0c4e5 (
 input v27dec4,
 input vb192d0,
 input v2d3366,
 output v030ad0
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 assign v030ad0 = w0;
 assign w2 = v2d3366;
 assign w3 = v2d3366;
 assign w6 = v27dec4;
 assign w7 = vb192d0;
 assign w3 = w2;
 v873425 vaaee1f (
  .vcbab45(w0),
  .v0e28cb(w1),
  .v3ca442(w4)
 );
 vba518e v569873 (
  .vcbab45(w1),
  .v3ca442(w2),
  .v0e28cb(w6)
 );
 v3676a0 v1f00ae (
  .v0e28cb(w3),
  .vcbab45(w5)
 );
 vba518e vc8527f (
  .vcbab45(w4),
  .v3ca442(w5),
  .v0e28cb(w7)
 );
endmodule

//---------------------------------------------------
//-- Mux-2-1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-to-1 Multplexer (1-bit channels)
//---------------------------------------------------
//---- Top entity
module v873425 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v873425_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- OR2
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- OR2: Two bits input OR gate
//---------------------------------------------------

module v873425_vf4938a (
 input a,
 input b,
 output c
);
 //-- OR Gate
 //-- Verilog implementation
 
 assign c = a | b;
 
 
endmodule
//---- Top entity
module vba518e (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 vba518e_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- AND2
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Two bits input And gate
//---------------------------------------------------

module vba518e_vf4938a (
 input a,
 input b,
 output c
);
 //-- AND gate
 //-- Verilog implementation
 
 assign c = a & b;
 
endmodule
//---- Top entity
module v3676a0 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v3676a0_vd54ca1 vd54ca1 (
  .a(w0),
  .q(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NOT gate (Verilog implementation)
//---------------------------------------------------

module v3676a0_vd54ca1 (
 input a,
 output q
);
 //-- NOT Gate
 assign q = ~a;
 
 
endmodule
//---- Top entity
module vafb28f (
 input [3:0] v515fe7,
 input [3:0] v3c88fc,
 output [7:0] va9ac17
);
 wire [0:7] w0;
 wire [0:3] w1;
 wire [0:3] w2;
 assign va9ac17 = w0;
 assign w1 = v515fe7;
 assign w2 = v3c88fc;
 vafb28f_v9a2a06 v9a2a06 (
  .o(w0),
  .i1(w1),
  .i0(w2)
 );
endmodule

//---------------------------------------------------
//-- Bus8-Join-half
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus8-Join-half: Join the two same halves into an 8-bits Bus
//---------------------------------------------------

module vafb28f_v9a2a06 (
 input [3:0] i1,
 input [3:0] i0,
 output [7:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v6bdcd9 (
 input [7:0] vcc8c7c,
 output [3:0] v651522,
 output [3:0] v2cc41f
);
 wire [0:3] w0;
 wire [0:3] w1;
 wire [0:7] w2;
 assign v651522 = w0;
 assign v2cc41f = w1;
 assign w2 = vcc8c7c;
 v6bdcd9_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Bus8-Split-half
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus8-Split-half: Split the 8-bits bus into two buses of the same size
//---------------------------------------------------

module v6bdcd9_v9a2a06 (
 input [7:0] i,
 output [3:0] o1,
 output [3:0] o0
);
 assign o1 = i[7:4];
 assign o0 = i[3:0];
endmodule
//---- Top entity
module v306ca3 (
 input [15:0] v91b9c1,
 output [7:0] vef5eee,
 output [7:0] vd3ef3b
);
 wire [0:15] w0;
 wire [0:7] w1;
 wire [0:7] w2;
 assign w0 = v91b9c1;
 assign vef5eee = w1;
 assign vd3ef3b = w2;
 v306ca3_v9a2a06 v9a2a06 (
  .i(w0),
  .o1(w1),
  .o0(w2)
 );
endmodule

//---------------------------------------------------
//-- Bus16-Split-half
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus16-Split-half: Split the 16-bits bus into two buses of the same size
//---------------------------------------------------

module v306ca3_v9a2a06 (
 input [15:0] i,
 output [7:0] o1,
 output [7:0] o0
);
 assign o1 = i[15:8];
 assign o0 = i[7:0];
endmodule
//---- Top entity
module v8cc49c (
 input [7:0] vb334ae,
 input [7:0] v2b8a97,
 output [15:0] v14a530
);
 wire [0:15] w0;
 wire [0:7] w1;
 wire [0:7] w2;
 assign v14a530 = w0;
 assign w1 = v2b8a97;
 assign w2 = vb334ae;
 v8cc49c_v9a2a06 v9a2a06 (
  .o(w0),
  .i0(w1),
  .i1(w2)
 );
endmodule

//---------------------------------------------------
//-- Bus16-Join-half
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus16-Join-half: Join the two same halves into an 16-bits Bus
//---------------------------------------------------

module v8cc49c_v9a2a06 (
 input [7:0] i1,
 input [7:0] i0,
 output [15:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v34688e #(
 parameter vc5c8ea = 0
) (
 output [15:0] v366f99
);
 localparam p0 = vc5c8ea;
 wire [0:15] w1;
 assign v366f99 = w1;
 v34688e_v465065 #(
  .VALUE(p0)
 ) v465065 (
  .k(w1)
 );
endmodule

//---------------------------------------------------
//-- Constante-16bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Valor genérico constante, de 16 bits. Su valor se introduce como parámetro. Por defecto vale 0
//---------------------------------------------------

module v34688e_v465065 #(
 parameter VALUE = 0
) (
 output [15:0] k
);
 assign k = VALUE;
endmodule
//---- Top entity
module vbc6704 (
 input [7:0] v595263,
 output vc85478,
 output v7ada3f,
 output v2c9812,
 output ve0c1b4,
 output v7c37b3,
 output v8f149e,
 output vb85197,
 output v45ab8c
);
 wire [0:7] w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 assign w0 = v595263;
 assign vc85478 = w1;
 assign v7ada3f = w2;
 assign v2c9812 = w3;
 assign ve0c1b4 = w4;
 assign v7c37b3 = w5;
 assign v8f149e = w6;
 assign vb85197 = w7;
 assign v45ab8c = w8;
 vbc6704_v9a2a06 v9a2a06 (
  .i(w0),
  .o7(w1),
  .o6(w2),
  .o5(w3),
  .o4(w4),
  .o3(w5),
  .o2(w6),
  .o1(w7),
  .o0(w8)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 8-bits en 8 cables
//---------------------------------------------------

module vbc6704_v9a2a06 (
 input [7:0] i,
 output o7,
 output o6,
 output o5,
 output o4,
 output o3,
 output o2,
 output o1,
 output o0
);
 assign o7 = i[7];
 assign o6 = i[6];
 assign o5 = i[5];
 assign o4 = i[4];
 assign o3 = i[3];
 assign o2 = i[2];
 assign o1 = i[1];
 assign o0 = i[0];
endmodule
//---- Top entity
module v8e5461 (
 input v261cbf,
 input vff4755,
 input v563b03,
 output v25fa2b,
 output [15:0] v90f223,
 output [15:0] v093fb5
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire w26;
 wire w27;
 wire w28;
 wire w29;
 wire w30;
 wire w31;
 wire w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 wire w37;
 wire w38;
 wire w39;
 wire w40;
 wire w41;
 wire w42;
 wire w43;
 wire w44;
 wire w45;
 wire w46;
 wire w47;
 wire w48;
 wire w49;
 wire w50;
 wire w51;
 wire w52;
 wire w53;
 wire w54;
 wire w55;
 wire w56;
 wire w57;
 wire w58;
 wire w59;
 wire w60;
 wire w61;
 wire w62;
 wire w63;
 wire w64;
 wire w65;
 wire w66;
 wire w67;
 wire w68;
 wire w69;
 wire w70;
 wire w71;
 wire w72;
 wire w73;
 wire w74;
 wire w75;
 wire w76;
 wire w77;
 wire w78;
 wire w79;
 wire w80;
 wire w81;
 wire w82;
 wire w83;
 wire w84;
 wire w85;
 wire w86;
 wire w87;
 wire w88;
 wire w89;
 wire w90;
 wire w91;
 wire w92;
 wire w93;
 wire w94;
 wire w95;
 wire w96;
 wire w97;
 wire w98;
 wire w99;
 wire w100;
 wire w101;
 wire w102;
 wire w103;
 assign w0 = vff4755;
 assign w1 = vff4755;
 assign w2 = vff4755;
 assign w4 = vff4755;
 assign w6 = vff4755;
 assign w8 = vff4755;
 assign w10 = vff4755;
 assign w12 = vff4755;
 assign w14 = vff4755;
 assign w16 = vff4755;
 assign w18 = vff4755;
 assign w20 = vff4755;
 assign w22 = vff4755;
 assign w24 = vff4755;
 assign w26 = vff4755;
 assign w28 = vff4755;
 assign w30 = vff4755;
 assign w32 = vff4755;
 assign w33 = vff4755;
 assign w34 = v563b03;
 assign w36 = vff4755;
 assign w38 = vff4755;
 assign w40 = vff4755;
 assign w42 = vff4755;
 assign w44 = vff4755;
 assign w46 = vff4755;
 assign w48 = vff4755;
 assign w50 = vff4755;
 assign w52 = vff4755;
 assign w54 = vff4755;
 assign w56 = vff4755;
 assign w58 = vff4755;
 assign w60 = vff4755;
 assign w63 = vff4755;
 assign w66 = v261cbf;
 assign w67 = vff4755;
 assign w86 = vff4755;
 assign w88 = vff4755;
 assign w92 = vff4755;
 assign w94 = v261cbf;
 assign v90f223 = w95;
 assign v093fb5 = w98;
 assign v25fa2b = w103;
 assign w1 = w0;
 assign w2 = w0;
 assign w2 = w1;
 assign w4 = w0;
 assign w4 = w1;
 assign w4 = w2;
 assign w6 = w0;
 assign w6 = w1;
 assign w6 = w2;
 assign w6 = w4;
 assign w8 = w0;
 assign w8 = w1;
 assign w8 = w2;
 assign w8 = w4;
 assign w8 = w6;
 assign w10 = w0;
 assign w10 = w1;
 assign w10 = w2;
 assign w10 = w4;
 assign w10 = w6;
 assign w10 = w8;
 assign w12 = w0;
 assign w12 = w1;
 assign w12 = w2;
 assign w12 = w4;
 assign w12 = w6;
 assign w12 = w8;
 assign w12 = w10;
 assign w14 = w0;
 assign w14 = w1;
 assign w14 = w2;
 assign w14 = w4;
 assign w14 = w6;
 assign w14 = w8;
 assign w14 = w10;
 assign w14 = w12;
 assign w16 = w0;
 assign w16 = w1;
 assign w16 = w2;
 assign w16 = w4;
 assign w16 = w6;
 assign w16 = w8;
 assign w16 = w10;
 assign w16 = w12;
 assign w16 = w14;
 assign w18 = w0;
 assign w18 = w1;
 assign w18 = w2;
 assign w18 = w4;
 assign w18 = w6;
 assign w18 = w8;
 assign w18 = w10;
 assign w18 = w12;
 assign w18 = w14;
 assign w18 = w16;
 assign w20 = w0;
 assign w20 = w1;
 assign w20 = w2;
 assign w20 = w4;
 assign w20 = w6;
 assign w20 = w8;
 assign w20 = w10;
 assign w20 = w12;
 assign w20 = w14;
 assign w20 = w16;
 assign w20 = w18;
 assign w22 = w0;
 assign w22 = w1;
 assign w22 = w2;
 assign w22 = w4;
 assign w22 = w6;
 assign w22 = w8;
 assign w22 = w10;
 assign w22 = w12;
 assign w22 = w14;
 assign w22 = w16;
 assign w22 = w18;
 assign w22 = w20;
 assign w24 = w0;
 assign w24 = w1;
 assign w24 = w2;
 assign w24 = w4;
 assign w24 = w6;
 assign w24 = w8;
 assign w24 = w10;
 assign w24 = w12;
 assign w24 = w14;
 assign w24 = w16;
 assign w24 = w18;
 assign w24 = w20;
 assign w24 = w22;
 assign w26 = w0;
 assign w26 = w1;
 assign w26 = w2;
 assign w26 = w4;
 assign w26 = w6;
 assign w26 = w8;
 assign w26 = w10;
 assign w26 = w12;
 assign w26 = w14;
 assign w26 = w16;
 assign w26 = w18;
 assign w26 = w20;
 assign w26 = w22;
 assign w26 = w24;
 assign w28 = w0;
 assign w28 = w1;
 assign w28 = w2;
 assign w28 = w4;
 assign w28 = w6;
 assign w28 = w8;
 assign w28 = w10;
 assign w28 = w12;
 assign w28 = w14;
 assign w28 = w16;
 assign w28 = w18;
 assign w28 = w20;
 assign w28 = w22;
 assign w28 = w24;
 assign w28 = w26;
 assign w30 = w0;
 assign w30 = w1;
 assign w30 = w2;
 assign w30 = w4;
 assign w30 = w6;
 assign w30 = w8;
 assign w30 = w10;
 assign w30 = w12;
 assign w30 = w14;
 assign w30 = w16;
 assign w30 = w18;
 assign w30 = w20;
 assign w30 = w22;
 assign w30 = w24;
 assign w30 = w26;
 assign w30 = w28;
 assign w32 = w0;
 assign w32 = w1;
 assign w32 = w2;
 assign w32 = w4;
 assign w32 = w6;
 assign w32 = w8;
 assign w32 = w10;
 assign w32 = w12;
 assign w32 = w14;
 assign w32 = w16;
 assign w32 = w18;
 assign w32 = w20;
 assign w32 = w22;
 assign w32 = w24;
 assign w32 = w26;
 assign w32 = w28;
 assign w32 = w30;
 assign w33 = w0;
 assign w33 = w1;
 assign w33 = w2;
 assign w33 = w4;
 assign w33 = w6;
 assign w33 = w8;
 assign w33 = w10;
 assign w33 = w12;
 assign w33 = w14;
 assign w33 = w16;
 assign w33 = w18;
 assign w33 = w20;
 assign w33 = w22;
 assign w33 = w24;
 assign w33 = w26;
 assign w33 = w28;
 assign w33 = w30;
 assign w33 = w32;
 assign w36 = w0;
 assign w36 = w1;
 assign w36 = w2;
 assign w36 = w4;
 assign w36 = w6;
 assign w36 = w8;
 assign w36 = w10;
 assign w36 = w12;
 assign w36 = w14;
 assign w36 = w16;
 assign w36 = w18;
 assign w36 = w20;
 assign w36 = w22;
 assign w36 = w24;
 assign w36 = w26;
 assign w36 = w28;
 assign w36 = w30;
 assign w36 = w32;
 assign w36 = w33;
 assign w38 = w0;
 assign w38 = w1;
 assign w38 = w2;
 assign w38 = w4;
 assign w38 = w6;
 assign w38 = w8;
 assign w38 = w10;
 assign w38 = w12;
 assign w38 = w14;
 assign w38 = w16;
 assign w38 = w18;
 assign w38 = w20;
 assign w38 = w22;
 assign w38 = w24;
 assign w38 = w26;
 assign w38 = w28;
 assign w38 = w30;
 assign w38 = w32;
 assign w38 = w33;
 assign w38 = w36;
 assign w40 = w0;
 assign w40 = w1;
 assign w40 = w2;
 assign w40 = w4;
 assign w40 = w6;
 assign w40 = w8;
 assign w40 = w10;
 assign w40 = w12;
 assign w40 = w14;
 assign w40 = w16;
 assign w40 = w18;
 assign w40 = w20;
 assign w40 = w22;
 assign w40 = w24;
 assign w40 = w26;
 assign w40 = w28;
 assign w40 = w30;
 assign w40 = w32;
 assign w40 = w33;
 assign w40 = w36;
 assign w40 = w38;
 assign w42 = w0;
 assign w42 = w1;
 assign w42 = w2;
 assign w42 = w4;
 assign w42 = w6;
 assign w42 = w8;
 assign w42 = w10;
 assign w42 = w12;
 assign w42 = w14;
 assign w42 = w16;
 assign w42 = w18;
 assign w42 = w20;
 assign w42 = w22;
 assign w42 = w24;
 assign w42 = w26;
 assign w42 = w28;
 assign w42 = w30;
 assign w42 = w32;
 assign w42 = w33;
 assign w42 = w36;
 assign w42 = w38;
 assign w42 = w40;
 assign w44 = w0;
 assign w44 = w1;
 assign w44 = w2;
 assign w44 = w4;
 assign w44 = w6;
 assign w44 = w8;
 assign w44 = w10;
 assign w44 = w12;
 assign w44 = w14;
 assign w44 = w16;
 assign w44 = w18;
 assign w44 = w20;
 assign w44 = w22;
 assign w44 = w24;
 assign w44 = w26;
 assign w44 = w28;
 assign w44 = w30;
 assign w44 = w32;
 assign w44 = w33;
 assign w44 = w36;
 assign w44 = w38;
 assign w44 = w40;
 assign w44 = w42;
 assign w46 = w0;
 assign w46 = w1;
 assign w46 = w2;
 assign w46 = w4;
 assign w46 = w6;
 assign w46 = w8;
 assign w46 = w10;
 assign w46 = w12;
 assign w46 = w14;
 assign w46 = w16;
 assign w46 = w18;
 assign w46 = w20;
 assign w46 = w22;
 assign w46 = w24;
 assign w46 = w26;
 assign w46 = w28;
 assign w46 = w30;
 assign w46 = w32;
 assign w46 = w33;
 assign w46 = w36;
 assign w46 = w38;
 assign w46 = w40;
 assign w46 = w42;
 assign w46 = w44;
 assign w48 = w0;
 assign w48 = w1;
 assign w48 = w2;
 assign w48 = w4;
 assign w48 = w6;
 assign w48 = w8;
 assign w48 = w10;
 assign w48 = w12;
 assign w48 = w14;
 assign w48 = w16;
 assign w48 = w18;
 assign w48 = w20;
 assign w48 = w22;
 assign w48 = w24;
 assign w48 = w26;
 assign w48 = w28;
 assign w48 = w30;
 assign w48 = w32;
 assign w48 = w33;
 assign w48 = w36;
 assign w48 = w38;
 assign w48 = w40;
 assign w48 = w42;
 assign w48 = w44;
 assign w48 = w46;
 assign w50 = w0;
 assign w50 = w1;
 assign w50 = w2;
 assign w50 = w4;
 assign w50 = w6;
 assign w50 = w8;
 assign w50 = w10;
 assign w50 = w12;
 assign w50 = w14;
 assign w50 = w16;
 assign w50 = w18;
 assign w50 = w20;
 assign w50 = w22;
 assign w50 = w24;
 assign w50 = w26;
 assign w50 = w28;
 assign w50 = w30;
 assign w50 = w32;
 assign w50 = w33;
 assign w50 = w36;
 assign w50 = w38;
 assign w50 = w40;
 assign w50 = w42;
 assign w50 = w44;
 assign w50 = w46;
 assign w50 = w48;
 assign w52 = w0;
 assign w52 = w1;
 assign w52 = w2;
 assign w52 = w4;
 assign w52 = w6;
 assign w52 = w8;
 assign w52 = w10;
 assign w52 = w12;
 assign w52 = w14;
 assign w52 = w16;
 assign w52 = w18;
 assign w52 = w20;
 assign w52 = w22;
 assign w52 = w24;
 assign w52 = w26;
 assign w52 = w28;
 assign w52 = w30;
 assign w52 = w32;
 assign w52 = w33;
 assign w52 = w36;
 assign w52 = w38;
 assign w52 = w40;
 assign w52 = w42;
 assign w52 = w44;
 assign w52 = w46;
 assign w52 = w48;
 assign w52 = w50;
 assign w54 = w0;
 assign w54 = w1;
 assign w54 = w2;
 assign w54 = w4;
 assign w54 = w6;
 assign w54 = w8;
 assign w54 = w10;
 assign w54 = w12;
 assign w54 = w14;
 assign w54 = w16;
 assign w54 = w18;
 assign w54 = w20;
 assign w54 = w22;
 assign w54 = w24;
 assign w54 = w26;
 assign w54 = w28;
 assign w54 = w30;
 assign w54 = w32;
 assign w54 = w33;
 assign w54 = w36;
 assign w54 = w38;
 assign w54 = w40;
 assign w54 = w42;
 assign w54 = w44;
 assign w54 = w46;
 assign w54 = w48;
 assign w54 = w50;
 assign w54 = w52;
 assign w56 = w0;
 assign w56 = w1;
 assign w56 = w2;
 assign w56 = w4;
 assign w56 = w6;
 assign w56 = w8;
 assign w56 = w10;
 assign w56 = w12;
 assign w56 = w14;
 assign w56 = w16;
 assign w56 = w18;
 assign w56 = w20;
 assign w56 = w22;
 assign w56 = w24;
 assign w56 = w26;
 assign w56 = w28;
 assign w56 = w30;
 assign w56 = w32;
 assign w56 = w33;
 assign w56 = w36;
 assign w56 = w38;
 assign w56 = w40;
 assign w56 = w42;
 assign w56 = w44;
 assign w56 = w46;
 assign w56 = w48;
 assign w56 = w50;
 assign w56 = w52;
 assign w56 = w54;
 assign w58 = w0;
 assign w58 = w1;
 assign w58 = w2;
 assign w58 = w4;
 assign w58 = w6;
 assign w58 = w8;
 assign w58 = w10;
 assign w58 = w12;
 assign w58 = w14;
 assign w58 = w16;
 assign w58 = w18;
 assign w58 = w20;
 assign w58 = w22;
 assign w58 = w24;
 assign w58 = w26;
 assign w58 = w28;
 assign w58 = w30;
 assign w58 = w32;
 assign w58 = w33;
 assign w58 = w36;
 assign w58 = w38;
 assign w58 = w40;
 assign w58 = w42;
 assign w58 = w44;
 assign w58 = w46;
 assign w58 = w48;
 assign w58 = w50;
 assign w58 = w52;
 assign w58 = w54;
 assign w58 = w56;
 assign w60 = w0;
 assign w60 = w1;
 assign w60 = w2;
 assign w60 = w4;
 assign w60 = w6;
 assign w60 = w8;
 assign w60 = w10;
 assign w60 = w12;
 assign w60 = w14;
 assign w60 = w16;
 assign w60 = w18;
 assign w60 = w20;
 assign w60 = w22;
 assign w60 = w24;
 assign w60 = w26;
 assign w60 = w28;
 assign w60 = w30;
 assign w60 = w32;
 assign w60 = w33;
 assign w60 = w36;
 assign w60 = w38;
 assign w60 = w40;
 assign w60 = w42;
 assign w60 = w44;
 assign w60 = w46;
 assign w60 = w48;
 assign w60 = w50;
 assign w60 = w52;
 assign w60 = w54;
 assign w60 = w56;
 assign w60 = w58;
 assign w63 = w0;
 assign w63 = w1;
 assign w63 = w2;
 assign w63 = w4;
 assign w63 = w6;
 assign w63 = w8;
 assign w63 = w10;
 assign w63 = w12;
 assign w63 = w14;
 assign w63 = w16;
 assign w63 = w18;
 assign w63 = w20;
 assign w63 = w22;
 assign w63 = w24;
 assign w63 = w26;
 assign w63 = w28;
 assign w63 = w30;
 assign w63 = w32;
 assign w63 = w33;
 assign w63 = w36;
 assign w63 = w38;
 assign w63 = w40;
 assign w63 = w42;
 assign w63 = w44;
 assign w63 = w46;
 assign w63 = w48;
 assign w63 = w50;
 assign w63 = w52;
 assign w63 = w54;
 assign w63 = w56;
 assign w63 = w58;
 assign w63 = w60;
 assign w65 = w64;
 assign w67 = w0;
 assign w67 = w1;
 assign w67 = w2;
 assign w67 = w4;
 assign w67 = w6;
 assign w67 = w8;
 assign w67 = w10;
 assign w67 = w12;
 assign w67 = w14;
 assign w67 = w16;
 assign w67 = w18;
 assign w67 = w20;
 assign w67 = w22;
 assign w67 = w24;
 assign w67 = w26;
 assign w67 = w28;
 assign w67 = w30;
 assign w67 = w32;
 assign w67 = w33;
 assign w67 = w36;
 assign w67 = w38;
 assign w67 = w40;
 assign w67 = w42;
 assign w67 = w44;
 assign w67 = w46;
 assign w67 = w48;
 assign w67 = w50;
 assign w67 = w52;
 assign w67 = w54;
 assign w67 = w56;
 assign w67 = w58;
 assign w67 = w60;
 assign w67 = w63;
 assign w70 = w3;
 assign w71 = w5;
 assign w72 = w7;
 assign w73 = w9;
 assign w74 = w11;
 assign w75 = w13;
 assign w76 = w15;
 assign w77 = w17;
 assign w78 = w19;
 assign w79 = w21;
 assign w80 = w23;
 assign w81 = w25;
 assign w82 = w27;
 assign w83 = w29;
 assign w84 = w31;
 assign w86 = w0;
 assign w86 = w1;
 assign w86 = w2;
 assign w86 = w4;
 assign w86 = w6;
 assign w86 = w8;
 assign w86 = w10;
 assign w86 = w12;
 assign w86 = w14;
 assign w86 = w16;
 assign w86 = w18;
 assign w86 = w20;
 assign w86 = w22;
 assign w86 = w24;
 assign w86 = w26;
 assign w86 = w28;
 assign w86 = w30;
 assign w86 = w32;
 assign w86 = w33;
 assign w86 = w36;
 assign w86 = w38;
 assign w86 = w40;
 assign w86 = w42;
 assign w86 = w44;
 assign w86 = w46;
 assign w86 = w48;
 assign w86 = w50;
 assign w86 = w52;
 assign w86 = w54;
 assign w86 = w56;
 assign w86 = w58;
 assign w86 = w60;
 assign w86 = w63;
 assign w86 = w67;
 assign w87 = w69;
 assign w88 = w0;
 assign w88 = w1;
 assign w88 = w2;
 assign w88 = w4;
 assign w88 = w6;
 assign w88 = w8;
 assign w88 = w10;
 assign w88 = w12;
 assign w88 = w14;
 assign w88 = w16;
 assign w88 = w18;
 assign w88 = w20;
 assign w88 = w22;
 assign w88 = w24;
 assign w88 = w26;
 assign w88 = w28;
 assign w88 = w30;
 assign w88 = w32;
 assign w88 = w33;
 assign w88 = w36;
 assign w88 = w38;
 assign w88 = w40;
 assign w88 = w42;
 assign w88 = w44;
 assign w88 = w46;
 assign w88 = w48;
 assign w88 = w50;
 assign w88 = w52;
 assign w88 = w54;
 assign w88 = w56;
 assign w88 = w58;
 assign w88 = w60;
 assign w88 = w63;
 assign w88 = w67;
 assign w88 = w86;
 assign w89 = w68;
 assign w91 = w90;
 assign w92 = w0;
 assign w92 = w1;
 assign w92 = w2;
 assign w92 = w4;
 assign w92 = w6;
 assign w92 = w8;
 assign w92 = w10;
 assign w92 = w12;
 assign w92 = w14;
 assign w92 = w16;
 assign w92 = w18;
 assign w92 = w20;
 assign w92 = w22;
 assign w92 = w24;
 assign w92 = w26;
 assign w92 = w28;
 assign w92 = w30;
 assign w92 = w32;
 assign w92 = w33;
 assign w92 = w36;
 assign w92 = w38;
 assign w92 = w40;
 assign w92 = w42;
 assign w92 = w44;
 assign w92 = w46;
 assign w92 = w48;
 assign w92 = w50;
 assign w92 = w52;
 assign w92 = w54;
 assign w92 = w56;
 assign w92 = w58;
 assign w92 = w60;
 assign w92 = w63;
 assign w92 = w67;
 assign w92 = w86;
 assign w92 = w88;
 assign w94 = w66;
 assign w101 = w64;
 assign w101 = w65;
 assign w102 = w90;
 assign w102 = w91;
 v102c6c v4a2cb1 (
  .v8f3c49(w0),
  .vf892a0(w64),
  .v0aa44d(w69),
  .v1384fd(w96)
 );
 v102c6c v1ecbbc (
  .v8f3c49(w1),
  .vf892a0(w65),
  .v0aa44d(w68),
  .v1384fd(w97)
 );
 v70ff7f vaf3cdc (
  .vb55943(w2),
  .vc24d9f(w3),
  .vef4cea(w61)
 );
 v70ff7f vbbc70c (
  .vef4cea(w3),
  .vb55943(w4),
  .vc24d9f(w5)
 );
 v70ff7f v81af44 (
  .vef4cea(w5),
  .vb55943(w6),
  .vc24d9f(w7)
 );
 v70ff7f v8debd2 (
  .vef4cea(w7),
  .vb55943(w8),
  .vc24d9f(w9)
 );
 v70ff7f vf82302 (
  .vef4cea(w9),
  .vb55943(w10),
  .vc24d9f(w11)
 );
 v70ff7f vb73d06 (
  .vef4cea(w11),
  .vb55943(w12),
  .vc24d9f(w13)
 );
 v70ff7f v4224f4 (
  .vef4cea(w13),
  .vb55943(w14),
  .vc24d9f(w15)
 );
 v70ff7f vfb6de4 (
  .vef4cea(w15),
  .vb55943(w16),
  .vc24d9f(w17)
 );
 v70ff7f vaf9a99 (
  .vef4cea(w17),
  .vb55943(w18),
  .vc24d9f(w19)
 );
 v70ff7f v5e9cd1 (
  .vef4cea(w19),
  .vb55943(w20),
  .vc24d9f(w21)
 );
 v70ff7f v6ae5a8 (
  .vef4cea(w21),
  .vb55943(w22),
  .vc24d9f(w23)
 );
 v70ff7f v7d7ec9 (
  .vef4cea(w23),
  .vb55943(w24),
  .vc24d9f(w25)
 );
 v70ff7f v4139d0 (
  .vef4cea(w25),
  .vb55943(w26),
  .vc24d9f(w27)
 );
 v70ff7f v36a2a1 (
  .vef4cea(w27),
  .vb55943(w28),
  .vc24d9f(w29)
 );
 v70ff7f vca0193 (
  .vef4cea(w29),
  .vb55943(w30),
  .vc24d9f(w31)
 );
 v70ff7f v9f4c9a (
  .vef4cea(w31),
  .vb55943(w32),
  .vc24d9f(w85)
 );
 v70ff7f v9e81b1 (
  .vb55943(w33),
  .vef4cea(w34),
  .vc24d9f(w35)
 );
 v70ff7f vaf1d11 (
  .vef4cea(w35),
  .vb55943(w36),
  .vc24d9f(w37)
 );
 v70ff7f v09cf87 (
  .vef4cea(w37),
  .vb55943(w38),
  .vc24d9f(w39)
 );
 v70ff7f vdce78b (
  .vef4cea(w39),
  .vb55943(w40),
  .vc24d9f(w41)
 );
 v70ff7f v423fad (
  .vef4cea(w41),
  .vb55943(w42),
  .vc24d9f(w43)
 );
 v70ff7f vcf208a (
  .vef4cea(w43),
  .vb55943(w44),
  .vc24d9f(w45)
 );
 v70ff7f va3061d (
  .vef4cea(w45),
  .vb55943(w46),
  .vc24d9f(w47)
 );
 v70ff7f vce00d7 (
  .vef4cea(w47),
  .vb55943(w48),
  .vc24d9f(w49)
 );
 v70ff7f vabc441 (
  .vef4cea(w49),
  .vb55943(w50),
  .vc24d9f(w51)
 );
 v70ff7f v720b82 (
  .vef4cea(w51),
  .vb55943(w52),
  .vc24d9f(w53)
 );
 v70ff7f v21446e (
  .vef4cea(w53),
  .vb55943(w54),
  .vc24d9f(w55)
 );
 v70ff7f v484e3c (
  .vef4cea(w55),
  .vb55943(w56),
  .vc24d9f(w57)
 );
 v70ff7f v712897 (
  .vef4cea(w57),
  .vb55943(w58),
  .vc24d9f(w59)
 );
 v70ff7f v7f7214 (
  .vef4cea(w59),
  .vb55943(w60),
  .vc24d9f(w62)
 );
 v70ff7f v5667e2 (
  .vc24d9f(w61),
  .vef4cea(w62),
  .vb55943(w63)
 );
 v8e2728 v08307d (
  .v2dffca(w64),
  .v10eedb(w66),
  .v0884a0(w67)
 );
 v8e5461_vefbd5a vefbd5a (
  .o0(w68),
  .o1(w69),
  .i07(w70),
  .i06(w71),
  .i05(w72),
  .i04(w73),
  .i03(w74),
  .i02(w75),
  .i01(w76),
  .i00(w77),
  .i17(w78),
  .i16(w79),
  .i15(w80),
  .i14(w81),
  .i13(w82),
  .i12(w83),
  .i11(w84),
  .i10(w85)
 );
 v102c6c vf16f08 (
  .v8f3c49(w86),
  .v0aa44d(w87),
  .vf892a0(w91),
  .v1384fd(w99)
 );
 v102c6c vd35b25 (
  .v8f3c49(w88),
  .v0aa44d(w89),
  .vf892a0(w90),
  .v1384fd(w100)
 );
 v8e2728 v38ab76 (
  .v2dffca(w90),
  .v0884a0(w92),
  .v10eedb(w93)
 );
 v96f098 vaf2012 (
  .vcbab45(w93),
  .v0e28cb(w94)
 );
 v1e224f v45a850 (
  .v4d4dee(w95),
  .v385b9c(w96),
  .vd34531(w97)
 );
 v1e224f v8b7d0e (
  .v4d4dee(w98),
  .v385b9c(w99),
  .vd34531(w100)
 );
 v528969 v68e906 (
  .v0e28cb(w101),
  .v3ca442(w102),
  .vcbab45(w103)
 );
endmodule


module v8e5461_vefbd5a (
 input i07,
 input i06,
 input i05,
 input i04,
 input i03,
 input i02,
 input i01,
 input i00,
 input i17,
 input i16,
 input i15,
 input i14,
 input i13,
 input i12,
 input i11,
 input i10,
 output [7:0] o0,
 output [7:0] o1
);
 assign o0 = {i00, i01, i02, i03, i04, i05, i06, i07};
 assign o1 = {i10, i11, i12, i13, i14, i15, i16, i17};
endmodule
//---- Top entity
module v102c6c (
 input v8f3c49,
 input [7:0] v0aa44d,
 input vf892a0,
 output [7:0] v1384fd
);
 wire [0:3] w0;
 wire [0:3] w1;
 wire [0:7] w2;
 wire [0:3] w3;
 wire [0:3] w4;
 wire w5;
 wire w6;
 wire [0:7] w7;
 wire w8;
 wire w9;
 assign v1384fd = w2;
 assign w5 = v8f3c49;
 assign w6 = v8f3c49;
 assign w7 = v0aa44d;
 assign w8 = vf892a0;
 assign w9 = vf892a0;
 assign w6 = w5;
 assign w9 = w8;
 v73403c v4d0daf (
  .v85accc(w0),
  .vf9119c(w1),
  .v595263(w7)
 );
 v0979b5 v54aa5e (
  .v55e55c(w0),
  .v30e9be(w4),
  .v8f3c49(w6),
  .vf892a0(w9)
 );
 v0979b5 vb07057 (
  .v55e55c(w1),
  .v30e9be(w3),
  .v8f3c49(w5),
  .vf892a0(w8)
 );
 v917222 v18a91f (
  .va191ad(w2),
  .v285646(w3),
  .v766044(w4)
 );
endmodule

//---------------------------------------------------
//-- 8-bits-reg-block
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 8-bits register (implemented with blocks)
//---------------------------------------------------
//---- Top entity
module v73403c (
 input [7:0] v595263,
 output [3:0] vf9119c,
 output [3:0] v85accc
);
 wire [0:3] w0;
 wire [0:3] w1;
 wire [0:7] w2;
 assign vf9119c = w0;
 assign v85accc = w1;
 assign w2 = v595263;
 v73403c_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 8-bits en buses de 4 bits
//---------------------------------------------------

module v73403c_v9a2a06 (
 input [7:0] i,
 output [3:0] o1,
 output [3:0] o0
);
 assign o1 = i[7:4];
 assign o0 = i[3:0];
endmodule
//---- Top entity
module v0979b5 (
 input v8f3c49,
 input [3:0] v55e55c,
 input vf892a0,
 output [3:0] v30e9be
);
 wire [0:1] w0;
 wire [0:1] w1;
 wire [0:3] w2;
 wire [0:1] w3;
 wire [0:1] w4;
 wire w5;
 wire w6;
 wire [0:3] w7;
 wire w8;
 wire w9;
 assign v30e9be = w2;
 assign w5 = v8f3c49;
 assign w6 = v8f3c49;
 assign w7 = v55e55c;
 assign w8 = vf892a0;
 assign w9 = vf892a0;
 assign w6 = w5;
 assign w9 = w8;
 v393a4b vb56971 (
  .v568b8a(w1),
  .va484f0(w3),
  .v8f3c49(w5),
  .vf892a0(w8)
 );
 v393a4b vfb6620 (
  .v568b8a(w0),
  .va484f0(w4),
  .v8f3c49(w6),
  .vf892a0(w9)
 );
 v18cbcb v050cbf (
  .v735395(w0),
  .v0daf7d(w1),
  .v930b03(w7)
 );
 v91b7ac vccc664 (
  .v8b7d6a(w2),
  .v30c67a(w3),
  .vbf5c47(w4)
 );
endmodule

//---------------------------------------------------
//-- 4-bits-reg-block
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 4-bits register (implemented with blocks)
//---------------------------------------------------
//---- Top entity
module v393a4b (
 input v8f3c49,
 input [1:0] v568b8a,
 input vf892a0,
 output [1:0] va484f0
);
 wire w0;
 wire w1;
 wire [0:1] w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:1] w6;
 wire w7;
 wire w8;
 wire w9;
 assign va484f0 = w2;
 assign w4 = v8f3c49;
 assign w5 = v8f3c49;
 assign w6 = v568b8a;
 assign w8 = vf892a0;
 assign w9 = vf892a0;
 assign w5 = w4;
 assign w9 = w8;
 veb8492 v218580 (
  .v27dec4(w0),
  .v4642b6(w3),
  .ve4a668(w5),
  .vd793aa(w8)
 );
 veb8492 v7283b4 (
  .v27dec4(w1),
  .ve4a668(w4),
  .v4642b6(w7),
  .vd793aa(w9)
 );
 vfc9dac v963cd7 (
  .v3f8943(w0),
  .v64d863(w1),
  .v8b19dd(w6)
 );
 vd4bd04 vbb7dfe (
  .v67a3fc(w2),
  .vee8a83(w3),
  .v03aaf0(w7)
 );
endmodule

//---------------------------------------------------
//-- 2-bits-reg-block
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 2-bits register (implemented with blocks)
//---------------------------------------------------
//---- Top entity
module veb8492 (
 input ve4a668,
 input v27dec4,
 input vd793aa,
 output v4642b6
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 assign w1 = ve4a668;
 assign w2 = v27dec4;
 assign v4642b6 = w3;
 assign w5 = vd793aa;
 assign w4 = w3;
 v1c7dae v3d516d (
  .vf54559(w0),
  .va4102a(w1),
  .ve8318d(w3)
 );
 v5cc6ec v55cdb1 (
  .vc93bbe(w0),
  .vb186da(w2),
  .v381ebf(w4),
  .v50d6c6(w5)
 );
endmodule

//---------------------------------------------------
//-- 1-bit-reg-blocks
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 1-Bit register (Implemented with icestudio blocks)
//---------------------------------------------------
//---- Top entity
module v1c7dae #(
 parameter v71e305 = 0
) (
 input va4102a,
 input vf54559,
 output ve8318d
);
 localparam p2 = v71e305;
 wire w0;
 wire w1;
 wire w3;
 assign w0 = va4102a;
 assign ve8318d = w1;
 assign w3 = vf54559;
 v1c7dae_vb8adf8 #(
  .INI(p2)
 ) vb8adf8 (
  .clk(w0),
  .q(w1),
  .d(w3)
 );
endmodule

//---------------------------------------------------
//-- Biestable-D
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Biestable de datos (Tipo D). Cuando se recibe un tic por load se captura el dato
//---------------------------------------------------

module v1c7dae_vb8adf8 #(
 parameter INI = 0
) (
 input clk,
 input d,
 output q
);
 reg q = INI;
 always @(posedge clk)
   q <= d;
endmodule
//---- Top entity
module v5cc6ec (
 input vb186da,
 input v381ebf,
 input v50d6c6,
 output vc93bbe
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign w0 = v50d6c6;
 assign vc93bbe = w1;
 assign w2 = v381ebf;
 assign w3 = vb186da;
 v5cc6ec_ve4e0df ve4e0df (
  .sel(w0),
  .o(w1),
  .i0(w2),
  .i1(w3)
 );
endmodule

//---------------------------------------------------
//-- Mux 2 a 1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexor de 2 a 1
//---------------------------------------------------

module v5cc6ec_ve4e0df (
 input i1,
 input i0,
 input sel,
 output o
);
 //-- Multiplexor de 2 a 1, 
 //-- de 8 bits
 
 reg _o;
 
 always @(*) begin
     case(sel)
         0: _o = i0;
         1: _o = i1;
         default: _o = i0;
     endcase
 end
 
 assign o = _o;
 
endmodule
//---- Top entity
module vfc9dac (
 input [1:0] v8b19dd,
 output v3f8943,
 output v64d863
);
 wire w0;
 wire w1;
 wire [0:1] w2;
 assign v3f8943 = w0;
 assign v64d863 = w1;
 assign w2 = v8b19dd;
 vfc9dac_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 2-bits en dos cables
//---------------------------------------------------

module vfc9dac_v9a2a06 (
 input [1:0] i,
 output o1,
 output o0
);
 assign o1 = i[1];
 assign o0 = i[0];
endmodule
//---- Top entity
module vd4bd04 (
 input vee8a83,
 input v03aaf0,
 output [1:0] v67a3fc
);
 wire w0;
 wire w1;
 wire [0:1] w2;
 assign w0 = vee8a83;
 assign w1 = v03aaf0;
 assign v67a3fc = w2;
 vd4bd04_v9a2a06 v9a2a06 (
  .i1(w0),
  .i0(w1),
  .o(w2)
 );
endmodule

//---------------------------------------------------
//-- Agregador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Agregador de 2 cables en un bus de 2-bits
//---------------------------------------------------

module vd4bd04_v9a2a06 (
 input i1,
 input i0,
 output [1:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v18cbcb (
 input [3:0] v930b03,
 output [1:0] v0daf7d,
 output [1:0] v735395
);
 wire [0:1] w0;
 wire [0:1] w1;
 wire [0:3] w2;
 assign v0daf7d = w0;
 assign v735395 = w1;
 assign w2 = v930b03;
 v18cbcb_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 4-bits en buses de 2 bits
//---------------------------------------------------

module v18cbcb_v9a2a06 (
 input [3:0] i,
 output [1:0] o1,
 output [1:0] o0
);
 assign o1 = i[3:2];
 assign o0 = i[1:0];
endmodule
//---- Top entity
module v91b7ac (
 input [1:0] v30c67a,
 input [1:0] vbf5c47,
 output [3:0] v8b7d6a
);
 wire [0:1] w0;
 wire [0:1] w1;
 wire [0:3] w2;
 assign w0 = vbf5c47;
 assign w1 = v30c67a;
 assign v8b7d6a = w2;
 v91b7ac_v9a2a06 v9a2a06 (
  .i0(w0),
  .i1(w1),
  .o(w2)
 );
endmodule

//---------------------------------------------------
//-- Agregador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Agregador de buses de 2-bits a bus de 4-bits
//---------------------------------------------------

module v91b7ac_v9a2a06 (
 input [1:0] i1,
 input [1:0] i0,
 output [3:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v917222 (
 input [3:0] v285646,
 input [3:0] v766044,
 output [7:0] va191ad
);
 wire [0:3] w0;
 wire [0:3] w1;
 wire [0:7] w2;
 assign w0 = v766044;
 assign w1 = v285646;
 assign va191ad = w2;
 v917222_v9a2a06 v9a2a06 (
  .i0(w0),
  .i1(w1),
  .o(w2)
 );
endmodule

//---------------------------------------------------
//-- Agregador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Agregador de 2 buses de 4-bits a bus de 8-bits
//---------------------------------------------------

module v917222_v9a2a06 (
 input [3:0] i1,
 input [3:0] i0,
 output [7:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v70ff7f (
 input vb55943,
 input vef4cea,
 output vc24d9f
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = vef4cea;
 assign w1 = vb55943;
 assign vc24d9f = w2;
 v70ff7f_v526aa2 v526aa2 (
  .d(w0),
  .clk(w1),
  .q(w2)
 );
endmodule

//---------------------------------------------------
//-- Flip-flop D
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Delay flip-flop
//---------------------------------------------------

module v70ff7f_v526aa2 (
 input clk,
 input d,
 output q
);
 // D flip-flop
 
 reg q = 1'b0;
 
 always @(posedge clk)
 begin
   q <= d;
 end
 
 
endmodule
//---- Top entity
module v8e2728 (
 input v0884a0,
 input v10eedb,
 output v2dffca
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v10eedb;
 assign v2dffca = w1;
 assign w2 = v0884a0;
 v8e2728_v115ffb v115ffb (
  .i(w0),
  .o(w1),
  .clk(w2)
 );
endmodule

//---------------------------------------------------
//-- Subida
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Detector de flanco de subida. Emite un tic cuando detecta un flanco ascendente
//---------------------------------------------------

module v8e2728_v115ffb (
 input clk,
 input i,
 output o
);
 reg q = 0;
 
 always @(posedge clk)
   q <= i;
   
 assign o = (~q & i);  
endmodule
//---- Top entity
module v1e224f (
 input [7:0] v385b9c,
 input [7:0] vd34531,
 output [15:0] v4d4dee
);
 wire [0:7] w0;
 wire [0:7] w1;
 wire [0:15] w2;
 assign w0 = vd34531;
 assign w1 = v385b9c;
 assign v4d4dee = w2;
 v1e224f_v9a2a06 v9a2a06 (
  .i0(w0),
  .i1(w1),
  .o(w2)
 );
endmodule

//---------------------------------------------------
//-- Agregador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Agregador de 2 buses de 8-bits a bus de 16-bits
//---------------------------------------------------

module v1e224f_v9a2a06 (
 input [7:0] i1,
 input [7:0] i0,
 output [15:0] o
);
 assign o = {i1, i0};
 
endmodule
//---- Top entity
module v528969 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v528969_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- OR
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- OR logic gate
//---------------------------------------------------

module v528969_vf4938a (
 input a,
 input b,
 output c
);
 // OR logic gate
 
 assign c = a | b;
endmodule
//---- Top entity
module v8dd0ad (
 input v7c48af,
 input vd2b237,
 input vcb13fe,
 output [7:0] ve13d67,
 output v59ca29
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire [0:7] w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire w26;
 wire w27;
 wire w28;
 wire w29;
 wire w30;
 wire w31;
 wire w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 wire w37;
 wire w38;
 wire w39;
 wire w40;
 wire w41;
 wire w42;
 wire w43;
 assign w0 = v7c48af;
 assign v59ca29 = w7;
 assign ve13d67 = w9;
 assign w26 = vcb13fe;
 assign w27 = vcb13fe;
 assign w28 = vcb13fe;
 assign w29 = vcb13fe;
 assign w30 = vcb13fe;
 assign w31 = vcb13fe;
 assign w32 = vcb13fe;
 assign w33 = vcb13fe;
 assign w42 = vd2b237;
 assign w11 = w1;
 assign w13 = w2;
 assign w15 = w3;
 assign w17 = w4;
 assign w19 = w5;
 assign w21 = w6;
 assign w23 = w8;
 assign w25 = w7;
 assign w27 = w26;
 assign w28 = w26;
 assign w28 = w27;
 assign w29 = w26;
 assign w29 = w27;
 assign w29 = w28;
 assign w30 = w26;
 assign w30 = w27;
 assign w30 = w28;
 assign w30 = w29;
 assign w31 = w26;
 assign w31 = w27;
 assign w31 = w28;
 assign w31 = w29;
 assign w31 = w30;
 assign w32 = w26;
 assign w32 = w27;
 assign w32 = w28;
 assign w32 = w29;
 assign w32 = w30;
 assign w32 = w31;
 assign w33 = w26;
 assign w33 = w27;
 assign w33 = w28;
 assign w33 = w29;
 assign w33 = w30;
 assign w33 = w31;
 assign w33 = w32;
 assign w35 = w34;
 assign w36 = w34;
 assign w36 = w35;
 assign w37 = w34;
 assign w37 = w35;
 assign w37 = w36;
 assign w38 = w34;
 assign w38 = w35;
 assign w38 = w36;
 assign w38 = w37;
 assign w39 = w34;
 assign w39 = w35;
 assign w39 = w36;
 assign w39 = w37;
 assign w39 = w38;
 assign w40 = w34;
 assign w40 = w35;
 assign w40 = w36;
 assign w40 = w37;
 assign w40 = w38;
 assign w40 = w39;
 assign w41 = w34;
 assign w41 = w35;
 assign w41 = w36;
 assign w41 = w37;
 assign w41 = w38;
 assign w41 = w39;
 assign w41 = w40;
 v70ff7f v7118be (
  .vef4cea(w0),
  .vc24d9f(w1),
  .vb55943(w34)
 );
 v70ff7f v7e5dd2 (
  .vef4cea(w1),
  .vc24d9f(w2),
  .vb55943(w35)
 );
 v70ff7f va39ac4 (
  .vef4cea(w2),
  .vc24d9f(w3),
  .vb55943(w36)
 );
 v70ff7f v9a8657 (
  .vef4cea(w3),
  .vc24d9f(w4),
  .vb55943(w37)
 );
 v70ff7f v789aba (
  .vef4cea(w4),
  .vc24d9f(w5),
  .vb55943(w38)
 );
 v70ff7f vfe039c (
  .vef4cea(w5),
  .vc24d9f(w6),
  .vb55943(w39)
 );
 v70ff7f vf5baf3 (
  .vef4cea(w6),
  .vc24d9f(w8),
  .vb55943(w40)
 );
 v70ff7f v8c3660 (
  .vc24d9f(w7),
  .vef4cea(w8),
  .vb55943(w41)
 );
 v8dd0ad_v5a7c2b v5a7c2b (
  .o(w9),
  .i7(w10),
  .i6(w12),
  .i5(w14),
  .i4(w16),
  .i3(w18),
  .i2(w20),
  .i1(w22),
  .i0(w24)
 );
 v70ff7f vef6c05 (
  .vc24d9f(w10),
  .vef4cea(w11),
  .vb55943(w26)
 );
 v70ff7f v55d1fc (
  .vc24d9f(w12),
  .vef4cea(w13),
  .vb55943(w27)
 );
 v7ebc90 v1c91a2 (
  .vcbab45(w34),
  .v0e28cb(w42),
  .v3ca442(w43)
 );
 v70ff7f v1577a8 (
  .vc24d9f(w14),
  .vef4cea(w15),
  .vb55943(w28)
 );
 v70ff7f v0d429a (
  .vc24d9f(w16),
  .vef4cea(w17),
  .vb55943(w29)
 );
 v70ff7f vfb6e30 (
  .vc24d9f(w18),
  .vef4cea(w19),
  .vb55943(w30)
 );
 v70ff7f v237d53 (
  .vc24d9f(w20),
  .vef4cea(w21),
  .vb55943(w31)
 );
 v70ff7f v721ec3 (
  .vc24d9f(w22),
  .vef4cea(w23),
  .vb55943(w32)
 );
 v70ff7f v4339fe (
  .vc24d9f(w24),
  .vef4cea(w25),
  .vb55943(w33)
 );
 vc83dcd v238496 (
  .v608bd9(w43)
 );
endmodule


module v8dd0ad_v5a7c2b (
 input i7,
 input i6,
 input i5,
 input i4,
 input i3,
 input i2,
 input i1,
 input i0,
 output [7:0] o
);
 assign o = {i0, i1, i2, i3, i4, i5, i6, i7};
endmodule
//---- Top entity
module v7ebc90 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v7ebc90_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- AND
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- AND logic gate
//---------------------------------------------------

module v7ebc90_vf4938a (
 input a,
 input b,
 output c
);
 // AND logic gate
 
 assign c = a & b;
endmodule
//---- Top entity
module v6a1dec (
 input vb58dd5,
 input v6ef738,
 input [15:0] vfa2ff3,
 input [15:0] v7a25d5,
 output v867092,
 output v33b195,
 output [31:0] va66a4c
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:31] w4;
 wire [0:15] w5;
 wire [0:15] w6;
 assign w0 = v6ef738;
 assign w1 = vb58dd5;
 assign v33b195 = w2;
 assign v867092 = w3;
 assign va66a4c = w4;
 assign w5 = vfa2ff3;
 assign w6 = v7a25d5;
 v6a1dec_v6f8349 v6f8349 (
  .start(w0),
  .clk(w1),
  .busy(w2),
  .pulse_done(w3),
  .y(w4),
  .a(w5),
  .b(w6)
 );
endmodule

//---------------------------------------------------
//-- mul_int16_32
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 16 bit inputs signed integer multiplier, 32 bits output
//---------------------------------------------------

module v6a1dec_v6f8349 (
 input clk,
 input start,
 input [15:0] a,
 input [15:0] b,
 output pulse_done,
 output busy,
 output [31:0] y
);
 // y = a * b, signed integers
 
 localparam N = 16;
 
 reg [(N+N-1):0] y = 0;
 reg out_valid;
 reg ready = 1;
 reg pulse_done = 0;
 reg busy = 0;
 
 reg [N-1:0] A;
 reg [N-1:0] B;
 reg [$clog2(N+1)-1:0] state = 0;
 reg [N-1:0] work;   
 reg [N-2:0] resultLsb;
 
 wire [N-1:0] pp = {N{A[0]}} & B;
 wire [N-1:0] pMod1 = {~pp[N-1], pp[N-2:0]};
 wire [N-1:0] pMod2 = ~pMod1;
 wire [N:0] sum12 = work + ((state == N) ? pMod2 : pMod1);
 wire [N:0] sum1 = sum12;
 wire [N:0] sum2 = sum12;
    
 reg prev_start = 0;   
    
 always @(posedge clk) 
 begin
     out_valid <= 0;
     A <= {1'bx, A[N-1:1]};      
     case (state)
 	    0:
 	        begin 
 	            pulse_done <= 0;
 	            busy <= 0;
 	        end
 	    1:  begin
 	            work <= {1'b1, pMod1[N-1:1]};
 	            resultLsb <= {pMod1[0], {N-2{1'bx}}};
 	            state <= state + 1;
 	        end
 	    default: 
 	        begin
 	            work <= sum1[N:1];
 	            resultLsb <= {sum1[0], resultLsb[N-2:1]};	   
 	            state <= state + 1;
 	        end
 	    N: 
 	        begin
 	            y <= {~sum2[N], sum2[N-1:0], resultLsb};
 	            out_valid <= 1;
 	            pulse_done <= 1;
 	            work <= 'bx;
 	            state <= 0;
 	            resultLsb <= 'bx;
 	            B <= 'bx;
 	            ready <= 1;	    
 	        end
     endcase
       
     if (start && !prev_start) 
     begin
 	    A <= a;
 	    B <= b;
 	    state <= 1;
 	    ready <= 0;
 	    busy <= 1;
     end
     
     prev_start <= start;
 end
endmodule
//---- Top entity
module vf1c811 (
 input [31:0] v2ebc76,
 output [15:0] v16822b,
 output [15:0] vf7d805
);
 wire [0:15] w0;
 wire [0:15] w1;
 wire [0:31] w2;
 assign v16822b = w0;
 assign vf7d805 = w1;
 assign w2 = v2ebc76;
 vf1c811_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 32-bits en buses de 16 bits
//---------------------------------------------------

module vf1c811_v9a2a06 (
 input [31:0] i,
 output [15:0] o1,
 output [15:0] o0
);
 assign o1 = i[31:16];
 assign o0 = i[15:0];
endmodule
//---- Top entity
module v3990b8 (
 input [15:0] v9e1443,
 input v9c2c2b,
 output [15:0] v5b7252
);
 wire [0:15] w0;
 wire [0:15] w1;
 wire [0:15] w2;
 wire w3;
 wire [0:15] w4;
 wire [0:15] w5;
 wire [0:15] w6;
 wire w7;
 wire w8;
 assign w1 = v9e1443;
 assign w2 = v9e1443;
 assign w3 = v9c2c2b;
 assign v5b7252 = w4;
 assign w8 = v9c2c2b;
 assign w2 = w1;
 assign w5 = w0;
 assign w8 = w3;
 v3990b8_vd930d4 vd930d4 (
  .b(w0),
  .a(w1),
  .y(w6)
 );
 v6bd4c0 vebc4e3 (
  .v3f90b8(w0),
  .vc320da(w2),
  .v6dda25(w7)
 );
 v1f5ce5 vd4f637 (
  .v2d3366(w3),
  .ve0f053(w4),
  .v17f43d(w5),
  .v0792df(w6)
 );
 v96f098 v6d170f (
  .vcbab45(w7),
  .v0e28cb(w8)
 );
endmodule


module v3990b8_vd930d4 (
 input [15:0] a,
 input [15:0] b,
 output [15:0] y
);
 // y = (a + b) / 2
 
 wire signed [16:0] sum;
 
 assign sum = $signed(a) + $signed(b);
 assign y = sum >>> 1;
endmodule
//---- Top entity
module v26f57a (
 input [15:0] vad1323,
 output [7:0] vf774e8,
 output [7:0] v0e9841
);
 wire [0:7] w0;
 wire [0:7] w1;
 wire [0:15] w2;
 assign v0e9841 = w0;
 assign vf774e8 = w1;
 assign w2 = vad1323;
 v26f57a_v9a2a06 v9a2a06 (
  .o0(w0),
  .o1(w1),
  .i(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 16-bits en buses de 8 bits
//---------------------------------------------------

module v26f57a_v9a2a06 (
 input [15:0] i,
 output [7:0] o1,
 output [7:0] o0
);
 assign o1 = i[15:8];
 assign o0 = i[7:0];
endmodule
//---- Top entity
module v3571f5 (
 input [15:0] v356dbf,
 output [15:0] vdb3006
);
 wire [0:15] w0;
 wire [0:15] w1;
 assign w0 = v356dbf;
 assign vdb3006 = w1;
 v3571f5_ve6b254 ve6b254 (
  .a(w0),
  .y(w1)
 );
endmodule

//---------------------------------------------------
//-- neg_int16
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 16 bits signed integer negation ( y = -a ) 
//---------------------------------------------------

module v3571f5_ve6b254 (
 input [15:0] a,
 output [15:0] y
);
 // y = -a, 16 bits integers
 
 assign y = ($signed(a) == -32768) ? 32767 : -$signed(a);
 
 
endmodule
//---- Top entity
module v7f1709 #(
 parameter vfffc23 = 0
) (
 output [15:0] vbf6cae
);
 localparam p0 = vfffc23;
 wire [0:15] w1;
 assign vbf6cae = w1;
 v34688e #(
  .vc5c8ea(p0)
 ) v46a5dd (
  .v366f99(w1)
 );
endmodule

//---------------------------------------------------
//-- Valor_0_16bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 16-bit Constant 0 value
//---------------------------------------------------
//---- Top entity
module vabdec4 (
 input [15:0] vd8a876,
 input [15:0] v5a666c,
 input [15:0] v280e01,
 input [15:0] v727789,
 input [15:0] v777340,
 input [15:0] v6b653c,
 input [15:0] v3bb07d,
 input [15:0] vc6bfd8,
 input [2:0] v6e806a,
 output [15:0] vf02cd8
);
 wire [0:15] w0;
 wire [0:15] w1;
 wire [0:15] w2;
 wire [0:15] w3;
 wire [0:15] w4;
 wire [0:15] w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire [0:2] w13;
 wire [0:15] w14;
 wire [0:15] w15;
 wire [0:15] w16;
 wire [0:15] w17;
 wire [0:15] w18;
 wire [0:15] w19;
 wire [0:15] w20;
 wire [0:15] w21;
 wire [0:15] w22;
 assign w13 = v6e806a;
 assign w14 = vd8a876;
 assign w15 = v5a666c;
 assign w16 = v280e01;
 assign w17 = v727789;
 assign w18 = v777340;
 assign w19 = v6b653c;
 assign w20 = v3bb07d;
 assign w21 = vc6bfd8;
 assign vf02cd8 = w22;
 assign w8 = w7;
 assign w10 = w9;
 assign w11 = w9;
 assign w11 = w10;
 assign w12 = w9;
 assign w12 = w10;
 assign w12 = w11;
 v1f5ce5 vc7043a (
  .v0792df(w4),
  .v17f43d(w5),
  .v2d3366(w6),
  .ve0f053(w22)
 );
 v1f5ce5 v02eed6 (
  .v0792df(w0),
  .v17f43d(w1),
  .ve0f053(w4),
  .v2d3366(w8)
 );
 v1f5ce5 v9c7a32 (
  .v0792df(w2),
  .v17f43d(w3),
  .ve0f053(w5),
  .v2d3366(w7)
 );
 v1f5ce5 v1bd45d (
  .ve0f053(w0),
  .v2d3366(w9),
  .v0792df(w14),
  .v17f43d(w15)
 );
 v1f5ce5 vc31787 (
  .ve0f053(w1),
  .v2d3366(w10),
  .v0792df(w16),
  .v17f43d(w17)
 );
 v1f5ce5 v42c116 (
  .ve0f053(w2),
  .v2d3366(w11),
  .v0792df(w18),
  .v17f43d(w19)
 );
 v1f5ce5 v0b5996 (
  .ve0f053(w3),
  .v2d3366(w12),
  .v0792df(w20),
  .v17f43d(w21)
 );
 v9690bd vd1c8f5 (
  .v0eb970(w6),
  .vdb4400(w7),
  .vd8f7de(w9),
  .vb0cf06(w13)
 );
endmodule

//---- Top entity
module v9690bd (
 input [2:0] vb0cf06,
 output v0eb970,
 output vdb4400,
 output vd8f7de
);
 wire w0;
 wire w1;
 wire w2;
 wire [0:2] w3;
 assign v0eb970 = w0;
 assign vdb4400 = w1;
 assign vd8f7de = w2;
 assign w3 = vb0cf06;
 v9690bd_v9a2a06 v9a2a06 (
  .o2(w0),
  .o1(w1),
  .o0(w2),
  .i(w3)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 3-bits
//---------------------------------------------------

module v9690bd_v9a2a06 (
 input [2:0] i,
 output o2,
 output o1,
 output o0
);
 assign o2 = i[2];
 assign o1 = i[1];
 assign o0 = i[0];
endmodule
//---- Top entity
module v481a07 (
 input [7:0] v595263,
 output [7:3] v28d91b,
 output [2:0] v738343
);
 wire [0:7] w0;
 wire [0:4] w1;
 wire [0:2] w2;
 assign w0 = v595263;
 assign v28d91b = w1;
 assign v738343 = w2;
 v481a07_v9a2a06 v9a2a06 (
  .i(w0),
  .o1(w1),
  .o0(w2)
 );
endmodule

//---------------------------------------------------
//-- Separador-bus-5-3
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Separador de bus de 8-bits en 2 buses de 5 y 3 bits
//---------------------------------------------------

module v481a07_v9a2a06 (
 input [7:0] i,
 output [7:3] o1,
 output [2:0] o0
);
 assign o1 = i[7:3];
 assign o0 = i[2:0];
endmodule
//---- Top entity
module v5ad97e #(
 parameter vc5c8ea = 0
) (
 output [7:0] v26dbdb
);
 localparam p0 = vc5c8ea;
 wire [0:7] w1;
 assign v26dbdb = w1;
 v5ad97e_v465065 #(
  .VALUE(p0)
 ) v465065 (
  .k(w1)
 );
endmodule

//---------------------------------------------------
//-- Constante-8bits
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0
//---------------------------------------------------

module v5ad97e_v465065 #(
 parameter VALUE = 0
) (
 output [7:0] k
);
 assign k = VALUE;
endmodule

module main_v6e4b35 #(
 parameter N = 0
) (
 input clk_in,
 output clk_out
);
 reg [15:0] counter;
 reg out = 1'b0;
 
 always @(posedge clk_in) begin
   counter <= counter + 1;
   if(counter == (N / 2) - 1) begin
     counter <= 0;
     out <= ~out;
   end
 end
 
 assign clk_out = out;
endmodule

module main_v8bf73c #(
 parameter DEADTIME = 0
) (
 input in,
 input clk,
 output out,
 output out_inv
);
 //-- N D flip-flops are needed
 reg d[DEADTIME-1:0];
 reg di[DEADTIME-1:0];
 
 //-- Final assignament
 assign out = d[0] & in;
 assign out_inv = di[0] & ~in;
 
 genvar i;
 generate
   
   //-- Conect N-1 flip-flops in cascade
   for (i = DEADTIME-1; i>=0; i = i - 1) begin
     always @(posedge clk) begin
       if(i < DEADTIME-1) begin
         d[i] <= d[i+1];
         di[i] <= di[i+1];
       end else begin
         d[i] <= in;
         di[i] <= ~in;
       end
     end
   end
   
 endgenerate
endmodule

module main_v37240a (
 input [15:0] in,
 output [15:0] out
);
 reg signed [15:0] data;
 assign data = in;
 assign out = data >>> 1;
endmodule

module main_v27ccf5 (
 input [15:0] in,
 output [15:0] out
);
 reg signed [15:0] data;
 assign data = in;
 assign out = data >>> 1;
endmodule

module main_vecc105 (
 input clk_in,
 output d5,
 output d4,
 output d3,
 output d2,
 output d1,
 output d0
);
 reg [6:0] counter;
 
 always @(posedge clk_in) begin
   counter <= counter + 1;
 end
 
 assign d0 = counter[0];
 assign d1 = counter[1];
 assign d2 = counter[2];
 assign d3 = counter[3];
 assign d4 = counter[4];
 assign d5 = counter[5];
endmodule

module main_vdb28b3 #(
 parameter ROMFILE = 0,
 parameter COUNT = 0
) (
 input clk_in,
 output [15:0] out
);
 reg [15:0] rom [0:COUNT-1];
 reg [7:0] counter;
 
 always @(posedge clk_in) begin
   counter <= counter + 1;
   if(counter == COUNT) begin
     counter <= 0;
   end
 end
 
 initial begin
     if (ROMFILE) $readmemh(ROMFILE, rom);
 end
 
 assign out = rom[counter];
endmodule

module main_vfc6dff #(
 parameter N = 0
) (
 input clk_in,
 output clk_out
);
 reg [15:0] counter;
 reg out = 1'b0;
 
 always @(posedge clk_in) begin
   counter <= counter + 1;
   if(counter == (N / 2) - 1) begin
     counter <= 0;
     out <= ~out;
   end
 end
 
 assign clk_out = out;
endmodule
